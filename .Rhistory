"ARIMA",
"Exponential",
"TBATS",
"BATS",
"HoldWinters",
"Linear"),
label_size = 10,
ncol = 2,
rel_widths = .5,
rel_heights = 1)
forecast(mod_neural, 12)
autoplot(forecast(mod_neural, 12))
str(mod_neural)
forecast(mod_neural, 24)
forecast(mod_neural, 24)
library(zoo)
test <-0 forecast(mod_neural, 24)
test <- forecast(mod_neural, 24)
test
data.frame(Y=as.matrix(test), date=as.Date(as.yearmon(time(test))))
data.frame(Y=as.matrix(test), date=time(test))
test
str(test)
test <- ts(forecast(mod_neural, 24))
test
data.frame(Y=as.matrix(test$mean), date=time(test$mean))
fmod_neural <- forecast(mod_neural, 24)
fmod_neural
data.frame(Y=as.matrix(fmod_neural$mean), date=time(fmod_neural$mean))
fmod_neural <- forecast(mod_neural, 24)
fmod_neuralMean <- data.frame(Y=as.matrix(fmod_neural$mean), date=time(fmod_neural$mean))
fmod_neuralMean
data.frame(Y=as.matrix(fmod_neural$mean), date=as.Date(as.yearmon(time(fmod_neural$mean))))
x
str(ts)
str(x)
summary(x)
plotMod_neural <- autoplot(x)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.)
ggplot(x) +
geom_line( aes(y=value),
colour = "grey",
size = 0.)
ggplot(x) +
geom_line( aes(),
colour = "grey",
size = 0.)
data.frame(Y=as.matrix(x), date=as.Date(as.yearmon(time(x))))
ggplot(ActualData, aes(date, Value)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily Views")
ActualData <- data.frame(Value=as.matrix(x), date=as.Date(as.yearmon(time(x))))
ggplot(ActualData, aes(date, Value)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily Views")
ggplot(ActualData, aes(date, Value)) + geom_line()
fmod_neuralMean
fmod_neuralMean <- data.frame(Forecast =as.matrix(fmod_neural$mean), date=as.Date(as.yearmon(time(fmod_neural$mean))))
fmod_neuralMean
ggplot(ActualData, aes(date, Value)) + geom_line() +
geom_line(data = fmod_neuralMean, aes(date, Forecast)
)
autoplot(forecast(mod_arima, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
autoplot(forecast(mod_arima, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
autoplot(forecast(mod_exponential, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
ggplot(ActualData, aes(date, Value)) + geom_line() +
geom_line(data = fmod_neuralMean, aes(date, Forecast),
colour = "blue",
size = 0.5)
d.arima <- auto.arima(tsComboDataOpenPrice)
d.forecast <- forecast(d.arima, level = c(95), h = 24)
plotForecast <- autoplot(d.forecast) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_arima <- autoplot(forecast(mod_arima, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_exponential <- autoplot(forecast(mod_exponential, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
# # plotMod_neural <- ggplot(x)
# this one is different
fmod_neuralMean <- data.frame(Forecast =as.matrix(fmod_neural$mean), date=as.Date(as.yearmon(time(fmod_neural$mean))))
ActualData <- data.frame(Value=as.matrix(x), date=as.Date(as.yearmon(time(x))))
plotMod_neural <- ggplot(ActualData, aes(date, Value)) + geom_line() +
geom_line(data = fmod_neuralMean, aes(date, Forecast),
colour = "blue",
size = 0.5)
plotMod_tbats <- autoplot(forecast(mod_tbats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_bats <- autoplot(forecast(mod_bats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_holdWinters <- autoplot(forecast(mod_holdWinters, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_linear <- autoplot(forecast(mod_linear, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plot_grid(plotForecast,
plotMod_arima,
plotMod_exponential,
plotMod_tbats,
plotMod_bats,
plotMod_neural,
plotMod_holdWinters,
plotMod_linear,
labels = c("Forecast",
"ARIMA",
"Exponential",
"TBATS",
"BATS",
"plotMod_neural"
"HoldWinters",
"Linear"),
label_size = 10,
ncol = 2,
rel_widths = .5,
rel_heights = 1)
d.arima <- auto.arima(tsComboDataOpenPrice)
d.forecast <- forecast(d.arima, level = c(95), h = 24)
plotForecast <- autoplot(d.forecast) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_arima <- autoplot(forecast(mod_arima, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_exponential <- autoplot(forecast(mod_exponential, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
# # plotMod_neural <- ggplot(x)
# this one is different
fmod_neuralMean <- data.frame(Forecast =as.matrix(fmod_neural$mean), date=as.Date(as.yearmon(time(fmod_neural$mean))))
ActualData <- data.frame(Value=as.matrix(x), date=as.Date(as.yearmon(time(x))))
plotMod_neural <- ggplot(ActualData, aes(date, Value)) + geom_line() +
geom_line(data = fmod_neuralMean, aes(date, Forecast),
colour = "blue",
size = 0.5)
plotMod_tbats <- autoplot(forecast(mod_tbats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_bats <- autoplot(forecast(mod_bats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_holdWinters <- autoplot(forecast(mod_holdWinters, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_linear <- autoplot(forecast(mod_linear, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plot_grid(plotForecast,
plotMod_arima,
plotMod_exponential,
plotMod_tbats,
plotMod_bats,
plotMod_neural,
plotMod_holdWinters,
plotMod_linear,
labels = c("Forecast",
"ARIMA",
"Exponential",
"TBATS",
"BATS",
"plotMod_neural",
"HoldWinters",
"Linear"),
label_size = 10,
ncol = 2,
rel_widths = .5,
rel_heights = 1)
mod_stl = stlm(x, s.window=12, ic='aicc', robust=TRUE, method='ets')
mod_stl
mod_sts = StructTS(x)
mod_sts
autoplot(forecast(mod_stl, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
d.arima <- auto.arima(tsComboDataOpenPrice)
d.forecast <- forecast(d.arima, level = c(95), h = 24)
plotForecast <- autoplot(d.forecast) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_arima <- autoplot(forecast(mod_arima, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_exponential <- autoplot(forecast(mod_exponential, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotmod_stl <- autoplot(forecast(mod_stl, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
# # plotMod_neural <- ggplot(x)
# this one is different
fmod_neuralMean <- data.frame(Forecast =as.matrix(fmod_neural$mean), date=as.Date(as.yearmon(time(fmod_neural$mean))))
ActualData <- data.frame(Value=as.matrix(x), date=as.Date(as.yearmon(time(x))))
plotMod_neural <- ggplot(ActualData, aes(date, Value)) + geom_line() +
geom_line(data = fmod_neuralMean, aes(date, Forecast),
colour = "blue",
size = 0.5)
plotMod_tbats <- autoplot(forecast(mod_tbats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_bats <- autoplot(forecast(mod_bats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_holdWinters <- autoplot(forecast(mod_holdWinters, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_linear <- autoplot(forecast(mod_linear, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plot_grid(plotForecast,
plotMod_arima,
plotMod_exponential,
plotMod_tbats,
plotMod_bats,
plotMod_neural,
plotmod_stl,
plotMod_holdWinters,
plotMod_linear,
labels = c("Forecast",
"ARIMA",
"Exponential",
"TBATS",
"BATS",
"plotMod_neural",
"plotmod_stl",
"HoldWinters",
"Linear"),
label_size = 10,
ncol = 2,
rel_widths = .5,
rel_heights = 1)
# extract open price from the data
# first need to resort the data by date
comboDataOpenPrice <- comboData %>% arrange(Date) %>%
subset( Date >='1990-01-01',
select = c(Open, Date))
dates <- comboData %>% arrange(Date) %>%
subset( Date >='1990-01-01',
select = c( Date)) %>%
summarise(minYear = min(Date),
maxYear = max(Date)) %>%
gather(key, value) %>%
mutate(YearValue = as.numeric(format(value,'%Y')),
MonthValue = as.numeric(format(value,'%m')))
MinYear <- dates[1, 3] # row 1 col 3
MinMonth <- dates[1, 4] # row 1 col 4
MaxYear <- dates[2, 3]
MaxMonth <- dates[2, 4]
# make the count a time series object
tsComboDataOpenPrice <- ts(as.vector(comboDataOpenPrice$Open),
start = c(MinYear,
MinMonth),
end = c(MaxYear, MaxMonth), frequency = 12)
# now complete a foreacast
# some code is from here
# http://stats.stackexchange.com/questions/140163/timeseries-analysis-procedure-and-methods-using-r
x <- tsComboDataOpenPrice
mod_arima = auto.arima(x, ic = 'aicc', stepwise = FALSE)
mod_exponential = ets(x, ic = 'aicc', restrict = FALSE)
mod_neural = nnetar(x, p = 12, size = 25)
mod_tbats = tbats(x, use.parallel = FALSE)
mod_bats = bats(x, use.parallel = FALSE)
mod_stl = stlm(x, s.window=12, ic='aicc', robust=TRUE, method='ets')
# mod_sts = StructTS(x)
mod_holdWinters = HoltWinters(x, beta = FALSE, gamma = FALSE)
mod_linear = tslm(x ~ trend + season)
mod_sts = StructTS(x)
mod_sts
d.arima <- auto.arima(tsComboDataOpenPrice)
d.forecast <- forecast(d.arima, level = c(95), h = 24)
plotForecast <- autoplot(d.forecast) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_arima <- autoplot(forecast(mod_arima, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotMod_exponential <- autoplot(forecast(mod_exponential, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
plotmod_stl <- autoplot(forecast(mod_stl, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.5) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.5)
# # plotMod_neural <- ggplot(x)
# this one is different
fmod_neuralMean <- data.frame(Forecast =as.matrix(fmod_neural$mean), date=as.Date(as.yearmon(time(fmod_neural$mean))))
ActualData <- data.frame(Value=as.matrix(x), date=as.Date(as.yearmon(time(x))))
plotMod_neural <- ggplot(ActualData, aes(date, Value)) + geom_line() +
geom_line(data = fmod_neuralMean, aes(date, Forecast),
colour = "blue",
size = 0.5)
plotMod_tbats <- autoplot(forecast(mod_tbats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_bats <- autoplot(forecast(mod_bats, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_holdWinters <- autoplot(forecast(mod_holdWinters, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plotMod_linear <- autoplot(forecast(mod_linear, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
plot_grid(plotForecast,
plotMod_arima,
plotMod_exponential,
plotMod_tbats,
plotMod_bats,
plotMod_neural,
plotmod_stl,
plotMod_holdWinters,
plotMod_linear,
labels = c("Forecast",
"ARIMA",
"Exponential",
"TBATS",
"BATS",
"plotMod_neural",
"plotmod_stl",
"HoldWinters",
"Linear"),
label_size = 10,
ncol = 2,
rel_widths = .5,
rel_heights = 1)
par(mar = rep(2, 4),
cex.axis = .5,
las=1,
mfrow = c(4,2))
plot(forecast(mod_arima, 12), include = 120, cex.main = .8)
plot(forecast(mod_exponential, 12), include = 120, cex.main = .8)
plot(forecast(mod_neural, 12), include = 120, cex.main = .8)
# new plots
plot(forecast(mod_tbats, 12), include = 120, cex.main = .8)
plot(forecast(mod_bats, 12), include = 120, cex.main = .8)
# plot(forecast(mod_sts, 12), include=120)
plot(forecast(mod_holdWinters, 12), include = 120, cex.main = .8)
plot(forecast(mod_linear, 12), include = 120, cex.main = .8)
ggplot(ActualData, aes(date, Value)) + geom_line() +
geom_line(data = fmod_neuralMean, aes(date, Forecast),
colour = "blue",
size = 0.5)
plot(forecast(mod_neural, 24), include = 120, cex.main = .8)
x <- tsComboDataOpenPrice
mod_arima = auto.arima(x, ic = 'aicc', stepwise = FALSE)
mod_exponential = ets(x, ic = 'aicc', restrict = FALSE)
mod_neural = nnetar(x, p = 12, size = 25)
mod_tbats = tbats(x, use.parallel = FALSE)
mod_bats = bats(x, use.parallel = FALSE)
mod_stl = stlm(x, s.window=12, ic='aicc', robust = TRUE, method = 'ets')
# mod_sts = StructTS(x)
mod_holdWinters = HoltWinters(x, beta = FALSE, gamma = FALSE)
mod_linear = tslm(x ~ trend + season)
plot(forecast(mod_neural, 24), include = 120, cex.main = .8)
plot(forecast(mod_holdWinters, 12), include = 120, cex.main = .8)
autoplot(forecast(mod_linear, 24)) +
geom_line( aes(y=value),
colour = "grey",
size = 0.) +
geom_line( aes(y=Fitted),
colour = "blue",
size = 0.)
ctrl <- tseriesControl(stepSize = 1, maxHorizon = 12, minObs = 36, fixedWindow = TRUE)
models <- list()
models
models$arima = cv.ts(
tsComboDataOpenPrice, auto.arimaForecast, tsControl = ctrl,
ic = 'aicc', stepwise = FALSE)
