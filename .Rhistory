by = 1 ))
FelMisdComboByMonth <- merge(countsFelMisdComboByMonth, tsBreakPointsFelMisdArrestsMonth,
by.x = "seqNumb", by.y = "BreakPoints", all.x=TRUE)
# replace nas with zeroes
FelMisdComboByMonth$seqGrp[is.na(FelMisdComboByMonth$seqGrp)] <- 0
# create groups of breakpoints
startCount <- 0
for (c in 1:nrow(FelMisdComboByMonth)) {
startCount <- startCount + FelMisdComboByMonth[c, "seqGrp"] # create cumm sum
FelMisdComboByMonth[c, "CummSum"] <- startCount}
```
```{r structural change for felony arrests}
# structural change for Felony arrests
# remove the bpData set
rm(bpData, tsData, ci.bpData)
data <- FelMonthlyCounts
# make the count a time series object
tsData <- ts(as.vector(data),
start=c(2011,10), end=c(cutoffDateForReportYR, cutoffDateForReportMonth),
frequency = 12)
# complete structural change analysis on this variable
plot(tsData)
bpData <- breakpoints(tsData ~ 1)
summary(bpData)
plot(bpData)
breakpoints(bpData)
confint(bpData)
ci.bpData <- confint(bpData)
tsBreakPointsFelArrestsMonth <- as.data.frame(bpData$breakpoints)
names(tsBreakPointsFelArrestsMonth) <- "BreakPoints"
# get the breakpoints for fel arrets
FelArrestMonthConfidenceInterval <- as.data.frame(ci.bpData$confint)
# create a sequence of numbers on data with counts and
# breakpoints
FelMonthlyCounts <- newArrestsAndAps  %>%
group_by(BookYearMonth) %>%
filter (TYP == "F") %>%
summarise (countArrests = n() )
FelMonthlyCounts$seqNumb <- as.numeric(seq(1, NROW(FelMonthlyCounts), by = 1 ))
tsBreakPointsFelArrestsMonth$seqGrp <- as.numeric(seq(1, NROW(tsBreakPointsFelArrestsMonth),
by = 1 ))
FelComboByMonth <- merge(FelMonthlyCounts, tsBreakPointsFelArrestsMonth,
by.x = "seqNumb", by.y = "BreakPoints", all.x=TRUE)
# replace nas with zeroes
FelComboByMonth$seqGrp[is.na(FelComboByMonth$seqGrp)] <- 0
# create groups of breakpoints
startCount <- 0
for (c in 1:nrow(FelComboByMonth)) {
startCount <- startCount + FelComboByMonth[c, "seqGrp"] # create cumm sum
FelComboByMonth[c, "CummSum"] <- startCount}
```
```{r structural change misd arrrests}
# remove the bpData set
rm(bpData, tsData, ci.bpData)
data <- MisdMonthlyCounts
# make the count a time series object
tsData <- ts(as.vector(data),
start=c(2011,10), end=c(cutoffDateForReportYR, cutoffDateForReportMonth),
frequency = 12)
# complete structural change analysis on this variable
plot(tsData)
bpData <- breakpoints(tsData ~ 1)
summary(bpData)
plot(bpData)
breakpoints(bpData)
confint(bpData)
ci.bpData <- confint(bpData)
tsBreakPointsMisdArrestsMonth <- as.data.frame(bpData$breakpoints)
# get the breakpoints for Misd arrets
MisdArrestMonthConfidenceInterval <- as.data.frame(ci.bpData$confint)
names(tsBreakPointsMisdArrestsMonth) <- "BreakPoints"
# create a sequence of numbers on data with counts and
# breakpoints
MisdMonthlyCounts <- newArrestsAndAps  %>%
group_by(BookYearMonth) %>%
filter (TYP == "M") %>%
summarise (countArrests = n() )
MisdMonthlyCounts$seqNumb <- as.numeric(seq(1, NROW(MisdMonthlyCounts), by = 1 ))
tsBreakPointsMisdArrestsMonth$seqGrp <- as.numeric(seq(1, NROW(tsBreakPointsMisdArrestsMonth), by = 1 ))
MisdComboByMonth <- merge(MisdMonthlyCounts, tsBreakPointsMisdArrestsMonth,
by.x = "seqNumb", by.y = "BreakPoints", all.x=TRUE)
# replace nas with zeroes
MisdComboByMonth$seqGrp[is.na(MisdComboByMonth$seqGrp)] <- 0
# create groups of breakpoints
startCount <- 0
for (c in 1:nrow(MisdComboByMonth)) {
startCount <- startCount + MisdComboByMonth[c, "seqGrp"] # create cumm sum
MisdComboByMonth[c, "CummSum"] <- startCount}
```
```{r breakpoint table}
# create a table with the breakdown points
names(FelMisdArrestMonthConfidenceInterval) <- c("Lower","Breakpoint","Upper")
names(FelArrestMonthConfidenceInterval) <- c("Lower","Breakpoint","Upper")
names(MisdArrestMonthConfidenceInterval) <- c("Lower","Breakpoint","Upper")
# create a dummy variable for each
FelMisdArrestMonthConfidenceInterval$DummyVar <- seq(1, NROW(FelMisdArrestMonthConfidenceInterval), by = 1)
FelArrestMonthConfidenceInterval$DummyVar <- seq(1, NROW(FelArrestMonthConfidenceInterval), by = 1)
MisdArrestMonthConfidenceInterval$DummyVar <- seq(1, NROW(MisdArrestMonthConfidenceInterval), by = 1)
FelMisdArrestMonthConfidenceInterval
FelArrestMonthConfidenceInterval
MisdArrestMonthConfidenceInterval
# felony or misdemearnor
names(FelMisdArrestMonthConfidenceInterval) <- c("Lower","Breakpoint","Upper")
FelMisdArrestMonthConfidenceInterval$DummyVar <- seq(1, NROW(FelMisdArrestMonthConfidenceInterval), by = 1)
allciFelcountOfBreaks <- NROW(FelMisdArrestMonthConfidenceInterval)
# reshape the data
allciFellongbreakpoints <- FelMisdArrestMonthConfidenceInterval %>% gather(Stat, MonthNumb, -DummyVar)
# add a variable to past to each break
allciFellongbreakpoints$BreakNumb <- seq(1, allciFelcountOfBreaks, by = 1)
# paste the breaks numb to the stat
#longbreakpoints$Stat <- paste(longbreakpoints$Stat, longbreakpoints$BreakNumb, sep = " ")
# join this to the data with sequence of months
FelMisdArrestMonthConfidenceIntervalLongMonths <- left_join(allciFellongbreakpoints, monthdf, by = "MonthNumb")
FelMisdArrestMonthConfidenceIntervalLongMonths %>% spread(DummyVar, MonthNumb)
# drop some variables
FelMisdArrestMonthConfidenceIntervalLongMonths <- select(FelMisdArrestMonthConfidenceIntervalLongMonths, Stat, month, BreakNumb)
FelMisdArrestMonthConfidenceIntervalLongMonthsNoNas <- filter(FelMisdArrestMonthConfidenceIntervalLongMonths,
Stat %in% c("Lower","Breakpoint","Upper"))
# change the date format
FelMisdArrestMonthConfidenceIntervalLongMonthsNoNas$month <- format(FelMisdArrestMonthConfidenceIntervalLongMonthsNoNas$month, "%Y-%b")
FelMisdArrestMonthConfidenceIntervalShort <- FelMisdArrestMonthConfidenceIntervalLongMonthsNoNas %>%
spread(Stat, month)
FelMisdArrestMonthConfidenceIntervalShort$Type <- "Felony/Misdemeanor"
# felonies
names(FelArrestMonthConfidenceInterval) <- c("Lower","Breakpoint","Upper")
FelArrestMonthConfidenceInterval$DummyVar <- seq(1, NROW(FelArrestMonthConfidenceInterval), by = 1)
allciFelcountOfBreaks <- NROW(FelArrestMonthConfidenceInterval)
# reshape the data
allciFellongbreakpoints <- FelArrestMonthConfidenceInterval %>% gather(Stat, MonthNumb, -DummyVar)
# add a variable to past to each break
allciFellongbreakpoints$BreakNumb <- seq(1, allciFelcountOfBreaks, by = 1)
# paste the breaks numb to the stat
#longbreakpoints$Stat <- paste(longbreakpoints$Stat, longbreakpoints$BreakNumb, sep = " ")
# join this to the data with sequence of months
FelArrestMonthConfidenceIntervalLongMonths <- left_join(allciFellongbreakpoints, monthdf, by = "MonthNumb")
FelArrestMonthConfidenceIntervalLongMonths %>% spread(DummyVar, MonthNumb)
# drop some variables
FelArrestMonthConfidenceIntervalLongMonths <- select(FelArrestMonthConfidenceIntervalLongMonths, Stat, month, BreakNumb)
FelArrestMonthConfidenceIntervalLongMonthsNoNas <- filter(FelArrestMonthConfidenceIntervalLongMonths, Stat %in% c("Lower","Breakpoint","Upper"))
# change the date format
FelArrestMonthConfidenceIntervalLongMonthsNoNas$month <- format(FelArrestMonthConfidenceIntervalLongMonthsNoNas$month, "%Y-%b")
FelArrestMonthConfidenceIntervalShort <- FelArrestMonthConfidenceIntervalLongMonthsNoNas %>% spread(Stat, month)
FelArrestMonthConfidenceIntervalShort$Type <- "Felony only bookings"
# misdemeanor
names(MisdArrestMonthConfidenceInterval) <- c("Lower","Breakpoint","Upper")
MisdArrestMonthConfidenceInterval$DummyVar <- seq(1, NROW(MisdArrestMonthConfidenceInterval), by = 1)
allciFelcountOfBreaks <- NROW(MisdArrestMonthConfidenceInterval)
# reshape the data
allciFellongbreakpoints <- MisdArrestMonthConfidenceInterval %>% gather(Stat, MonthNumb, -DummyVar)
# add a variable to past to each break
allciFellongbreakpoints$BreakNumb <- seq(1, allciFelcountOfBreaks, by = 1)
# paste the breaks numb to the stat
#longbreakpoints$Stat <- paste(longbreakpoints$Stat, longbreakpoints$BreakNumb, sep = " ")
# join this to the data with sequence of months
MisdArrestMonthConfidenceIntervalLongMonths <- left_join(allciFellongbreakpoints,
monthdf, by = "MonthNumb")
MisdArrestMonthConfidenceIntervalLongMonths %>% spread(DummyVar, MonthNumb)
# drop some variables
MisdArrestMonthConfidenceIntervalLongMonths <- select(MisdArrestMonthConfidenceIntervalLongMonths,
Stat, month, BreakNumb)
MisdArrestMonthConfidenceIntervalLongMonthsNoNas <- filter(MisdArrestMonthConfidenceIntervalLongMonths,
Stat %in% c("Lower","Breakpoint","Upper"))
# change the date format
MisdArrestMonthConfidenceIntervalLongMonthsNoNas$month <- format(MisdArrestMonthConfidenceIntervalLongMonthsNoNas$month, "%Y-%b")
MisdArrestMonthConfidenceIntervalShort <- MisdArrestMonthConfidenceIntervalLongMonthsNoNas %>% spread(Stat, month)
MisdArrestMonthConfidenceIntervalShort$Type <- "Misdemeanor only bookings"
# combine the sets
breakPointsTableCombo <- rbind(FelMisdArrestMonthConfidenceIntervalShort,
FelArrestMonthConfidenceIntervalShort,
MisdArrestMonthConfidenceIntervalShort)
# rename some fields on the table
names(breakPointsTableCombo) <- c("Break Number", "Lower C.I.", "Breakpoint", "Upper C.I.",
"Arrest Type")
```
The table below shows the trend breaks per arrest type
```{r print breakpont table, results ='asis', message = FALSE, warning = FALSE, include=TRUE}
print(xtable(breakPointsTableCombo,
digits=0,
caption = "Breakpoints by arrests type with 95 percent confidence level intervals",
label="tblBreakpoints",
# align = "rl{5cm}r{3cm}r{3cm}r{3cm}r{3cm}"
),
caption.placement = "bottom",
include.rownames=FALSE,
# table.placement="t",
comment=FALSE)
```
```{r structBreak plots, fig.width= 7, fig.height = 10, fig.cap= "Trend break analysis by arrest type", message = FALSE, warning = FALSE, include=TRUE}
# add new variable to identify each set
FelMisdComboByMonth$Type <- "Felony or Misdemeanor bookings"
FelComboByMonth$Type <- "Felony only bookings"
MisdComboByMonth$Type <- "Misdemeanor only bookings"
# combine the data with breaks
comboMonthFelMisdAll <- rbind(FelMisdComboByMonth,
FelComboByMonth, MisdComboByMonth)
comboMonthFelMisdAllPiecewise <- comboMonthFelMisdAll
# set the dates when important events occurred
dateStartFieldContacts <- as.Date("2013-10-01")
dateProp47Began <- as.Date("2014-11-04")
# create new sets to plot labels
ann_textFieldContacts <- data.frame(BookYearMonth = dateStartFieldContacts,
countArrests = 50, lab = "Text",
Type = factor("Felony or Misdemeanor bookings",
levels = c("Felony or Misdemeanor bookings",
"Felony only bookings",
"Misdemeanor only bookings")))
ann_textProp47 <- data.frame(BookYearMonth = dateProp47Began,
countArrests = 50, lab = "Text",
Type = factor("Felony or Misdemeanor bookings",
levels = c("Felony or Misdemeanor bookings",
"Felony only bookings",
"Misdemeanor only bookings")))
# order levels
comboMonthFelMisdAll$Type <- factor(comboMonthFelMisdAll$Type,
levels = c("Felony or Misdemeanor bookings",
"Felony only bookings",
"Misdemeanor only bookings"))
end <- max(comboMonthFelMisdAll$BookYearMonth)
ggplot(data = comboMonthFelMisdAll, aes(x = BookYearMonth, y = countArrests ))  +
geom_line(stat = "identity", size = 1) + geom_point() +
facet_wrap(~ Type, ncol = 1, scales = "free_y" ) +
scale_x_date("Month and Year",
limits = c(as.Date("2011-10-1"), end),
labels = date_format("%b-%y"),
breaks = date_breaks("3 month")) +
scale_y_continuous("Count") +
stat_smooth(method="lm", data = comboMonthFelMisdAllPiecewise , size = 1,
alpha = .5, se = TRUE, fill = "lightblue",
linetype = 'twodash', aes(color = factor(CummSum))) +
guides(colour=FALSE) +
theme_bw() +
theme( #panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black")) +
geom_vline(xintercept = as.numeric(dateStartFieldContacts), linetype=4, size = 1,
color="blue") +
geom_vline(xintercept = as.numeric(dateProp47Began), linetype=4, size = 1,
color="firebrick") +
# annotate("text", label = "Start of AB 109",
#            x = dateStartAb109, y = 20,
#            hjust=0, vjust=1.50, angle = 90, size = 4, colour = "blue") +
geom_text(data = ann_textFieldContacts,label = "Field contacts start",
hjust=0, vjust=1.50, angle = 90,
size = 4, colour = "blue") +
geom_text(data = ann_textProp47,label = "Prop 47 approved",
hjust=0, vjust=1.50, angle = 90,
size = 4, colour = "firebrick") +
theme(axis.title.x = element_text(size = 16, angle = 00)) +
theme(axis.title.y = element_text(size = 16, angle = 90)) +
theme(axis.text.x = element_text(colour = "black",
size = 8,
angle = 90,
vjust = .5)) +
theme(panel.background = element_rect(fill = "#d5e4eb", colour = "black")) +
theme(plot.background = element_rect(fill = "#d5e4eb")) + # the economist background
theme(axis.text.y = element_text(colour = "black",
size = 8,
angle = 00))
```
```{r BookingsByAgencyMonth, fig.width= 7, fig.height = 10, fig.cap= "Bookings by month by arrest agencies that have had at least one booking for most months since AB 109 started", message = FALSE, warning = FALSE, include=TRUE}
newArrestsAndAps$YearMonth <- format(newArrestsAndAps$`BOOK DATE`, "%Y-%b")
# get the counts of bookings by agency and month
BookingsByAgencyMonth <- newArrestsAndAps %>%
group_by(`ARREST AGENCY`, YearMonth ) %>%
summarise(CountOfBookings = n())
# get the number of monthly counts each agency has
MonthsWithCountsByAgency <- BookingsByAgencyMonth %>%
group_by(`ARREST AGENCY`) %>%
summarise(
monthsWithCounts = length(`ARREST AGENCY`))
MonthsWithData = max(MonthsWithCountsByAgency$monthsWithCounts)
bookingsByMonthAgency <- left_join(MonthsWithCountsByAgency, BookingsByAgencyMonth, by = "ARREST AGENCY") %>%
filter(monthsWithCounts >= MonthsWithData-1 )
# rename the monthly coutns
names(bookingsByMonthAgency) <- c("ArrestAgency", "monthsWithCounts", "YearMonth", "CountOfBookings" )
# make the months and years date
bookingsByMonthAgency$YearMonth <- paste(bookingsByMonthAgency$YearMonth,"-1", sep = "")
bookingsByMonthAgency$YearMonth <- as.Date(bookingsByMonthAgency$YearMonth,  format = "%Y-%b-%d")
ggplot(data = bookingsByMonthAgency, aes(x = YearMonth, y = CountOfBookings ))  +
geom_line(stat = "identity", size = 1) + geom_point() +
facet_wrap(~ ArrestAgency, ncol = 2, scales = "free_y" ) +
scale_x_date("Month and Year",
labels = date_format("%b-%y"),
breaks = date_breaks("6 month")) +
theme_bw() +
theme( #panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black")) +
scale_y_continuous("Count", # limits=c(0, max(bookingsByMonthAgency$CountOfBookings)),
labels = comma) +
geom_vline(xintercept = as.numeric(dateStartFieldContacts ), linetype=4, size = 1,
color="blue") +
geom_vline(xintercept = as.numeric(dateProp47Began), linetype=4, size = 1,
color="firebrick") +
theme(axis.title.x = element_text(size = 16, angle = 00)) +
theme(axis.title.y = element_text(size = 16, angle = 90)) +
theme(axis.text.x = element_text(colour = "black",
size = 10,
angle = 90,
vjust = .5)) +
theme(axis.text.y = element_text(colour = "black",
size = 10,
angle = 00)) +
theme(panel.background = element_rect(fill = "#d5e4eb", colour = "black")) +
theme(plot.background = element_rect(fill = "#d5e4eb"))  # the economist background
```
```{r Bookings and cases booked plots, fig.width= 7, fig.height = 10, fig.cap= "Bookings and average bookings per PB cases for Felony or Misdemeanor bookings arrests while on active supervision by arrest agency", message = FALSE, warning = FALSE, include=TRUE}
BookingsByAgency <- newArrestsAndAps %>%
group_by(`ARREST AGENCY`) %>%
summarise(CountOfBookings = n(),
uniqueCases = n_distinct(`PB CASE NO`)) %>%
filter(uniqueCases > 30)
ggplot(BookingsByAgency, aes(CountOfBookings/uniqueCases, CountOfBookings,  label=`ARREST AGENCY`)) +
geom_vline(xintercept = median(BookingsByAgency$CountOfBookings/BookingsByAgency$uniqueCases),
colour = "#E69F00" ) +
annotate("text", colour = "#E69F00",
label = paste("Median of average bookings per PB Case is ",
round(median(BookingsByAgency$CountOfBookings/BookingsByAgency$uniqueCases),1),
sep = " "),
x = median(BookingsByAgency$CountOfBookings/BookingsByAgency$uniqueCases), y = 600,
hjust=0, vjust=-.6, angle = 90, size = 2, colour = "black") +
geom_hline(yintercept  = median(BookingsByAgency$CountOfBookings), colour =  "#CC79A7") +
annotate("text", colour =  "#CC79A7",
label = paste("Median bookings per agency is ",
prettyNum(round(median(BookingsByAgency$CountOfBookings),0),
big.mark=","),
sep = " "),
x = 1.6, y = median(BookingsByAgency$CountOfBookings),
hjust=0, vjust=1, angle = 0,  size = 2, colour = "black") +
theme_minimal() +
geom_text(aes(), size= 2, hjust=0, vjust=0,) +
geom_point(size =1) +
scale_y_continuous(labels = comma_format()) +
xlab("Average Bookings per PB Case") +
ylab("Frequency of felony or misdemeanor bookings active supervision") +
scale_x_continuous(limits=c(1,
max(BookingsByAgency$CountOfBookings/BookingsByAgency$uniqueCases)+0.08) ,
breaks=c(1,1.5,2) # ,
#                #labels = comma_format()
) +
theme(panel.background = element_rect(fill = "#d5e4eb", colour = "black")) +
theme(plot.background = element_rect(fill = "#d5e4eb")) # the economist background
```
```{r warrants and active cases, fig.width= 7, fig.height = 10, fig.cap= "Warrants issued, closed, and active and active PB cases", message = FALSE, warning = FALSE, include=TRUE}
# convert one variable counts to log scale
#CountsByMonthDFLong$count <- with(CountsByMonthDFLong,
#                                  ifelse(variable == "CleanDischargeDate",
#                                         log(count), count))
# merge the counts of warrant and active cases
comboWarrantActiveCases <- rbind(warrantCountsByMonthDFLong, CountsByMonthDFLong)
# recode some values
comboWarrantActiveCases$variable <- as.character(comboWarrantActiveCases$variable)
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="DateRecalled"] <- "Warrants recalled"
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="DateIssued"] <- "Warrants issued"
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="TotalWarransActivePerDay"] <- "Warrants active balance"
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="ActiveWarrants"] <- "Active warrants"
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="CleanDischargeDate"] <- "Cases discharged"
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="TermDate"] <- "Cases terminated"
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="TotalCasesPerDay"] <- "Cases active balance"
comboWarrantActiveCases$variable[comboWarrantActiveCases$variable =="CaseCummSum"] <- "Active cases"
comboWarrantActiveCases$variable <- as.factor(comboWarrantActiveCases$variable)
# order levels
comboWarrantActiveCases$variable <- factor(comboWarrantActiveCases$variable,
levels = c( "Warrants issued","Warrants recalled",
"Warrants active balance","Active warrants",
"Cases discharged","Cases terminated",
"Cases active balance","Active cases"))
endDay <- max(comboWarrantActiveCases$day)-1
# create a new variable to exclude some records
comboWarrantActiveCases$Exclude <- "No"
comboWarrantActiveCases$Exclude[comboWarrantActiveCases$variable == "Cases discharged" &
comboWarrantActiveCases$count > 250] <- "Yes"
comboWarrantActiveCases$Exclude[comboWarrantActiveCases$variable == "Cases terminated" &
comboWarrantActiveCases$count <= -250 ] <- "Yes"
comboWarrantActiveCases$Exclude[comboWarrantActiveCases$variable == "Cases active balance" &
comboWarrantActiveCases$count >= 0 |
comboWarrantActiveCases$variable == "Cases active balance" &
comboWarrantActiveCases$count <= 250] <- "Yes"
comboWarrantActiveCases$Exclude[comboWarrantActiveCases$variable == "Active cases" &
comboWarrantActiveCases$count <= 0 ] <- "Yes"
comboWarrantActiveCases %>%
filter(day >=  AB109Start, Exclude == "No" ) %>%
ggplot( aes(x=day, y=count, group=variable)) +
geom_line() + stat_smooth(se = TRUE)  +
facet_wrap(~ variable, ncol = 1,scales = "free_y" ) +
guides(colour=FALSE) +
theme_bw() +
theme( #panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black")) +
geom_vline(xintercept = as.numeric(dateStartFieldContacts), linetype=4, size = 1,
color="blue") +
geom_vline(xintercept = as.numeric(dateProp47Began), linetype=4, size = 1,
color="firebrick") +
theme(axis.title.x = element_text(size = 16, angle = 00)) +
theme(axis.title.y = element_text(size = 16, angle = 90)) +
theme(axis.text.x = element_text(colour = "black",
size = 8,
angle = 90,
vjust = .5)) +
theme(panel.background = element_rect(fill = "#d5e4eb", colour = "black")) +
theme(plot.background = element_rect(fill = "#d5e4eb")) + # the economist background
theme(axis.text.y = element_text(colour = "black",
size = 8,
angle = 00)) +
scale_x_date("Month and Year",
limits = c(as.Date("2011-10-1"), endDay),
labels = date_format("%b-%y"),
breaks = date_breaks("3 month")) +
scale_y_continuous("Count", # limits=c(0, max(bookingsByMonthAgency$CountOfBookings)),
labels = comma)
```
```{r recidivism rate by month, fig.width= 7, fig.height = 10, fig.cap= "Recidivism rates by month of discharge cohort", message = FALSE, warning = FALSE, include=TRUE}
# write.table(MonthlyDischargesRecidivism, file = "C:/Users/e551910/Desktop/apsArrestList.txt",  sep="\t", row.names = FALSE)
# select recidivism variables
RecidivismByMonth <- apsList %>%
select(DischMonth, HasDaConvictionCase, HasArrest, HasFlash, HasRevocation, HasCustodyEvents)  %>%
gather( variable, value, -DischMonth) %>%
group_by(DischMonth, value ) %>%
summarise(
counts = length(DischMonth))
# select recidivism variables
MonthlyDischarges <- apsList %>%
select(DischMonth) %>%
group_by(DischMonth ) %>%
summarise(
monthlyDischarges = length(DischMonth))
# merge both sets
MonthlyDischargesRecidivism <-left_join(RecidivismByMonth, MonthlyDischarges, by =  "DischMonth") %>%
mutate(PercentRate =  (counts / monthlyDischarges)*100)
# convert the DischMonth to date on the MonthlyDischargesRecidivism data
MonthlyDischargesRecidivism$DischMonth <- paste(MonthlyDischargesRecidivism$DischMonth,"-1", sep = "")
MonthlyDischargesRecidivism$DischMonth <- as.Date(MonthlyDischargesRecidivism$DischMonth,  format = "%y-%b-%d")
# create a new variable to exclude some records
MonthlyDischargesRecidivism$Exclude <- "No"
MonthlyDischargesRecidivism$Exclude[MonthlyDischargesRecidivism$value == "No arrest" ] <- "Yes"
MonthlyDischargesRecidivism$Exclude[MonthlyDischargesRecidivism$value == "No custody event" ] <- "Yes"
MonthlyDischargesRecidivism$Exclude[MonthlyDischargesRecidivism$value == "No D.A. conviction" ] <- "Yes"
MonthlyDischargesRecidivism$Exclude[MonthlyDischargesRecidivism$value == "No flash" ] <- "Yes"
MonthlyDischargesRecidivism$Exclude[MonthlyDischargesRecidivism$value == "No revocation" ] <- "Yes"
# filter the data
MonthlyDischargesRecidivismFiltered <- MonthlyDischargesRecidivism %>%
filter(Exclude == "No" )
# drop levels
MonthlyDischargesRecidivismFiltered <- droplevels(MonthlyDischargesRecidivismFiltered)
# re arrange the data levels
MonthlyDischargesRecidivism$value <- factor(MonthlyDischargesRecidivism$value,
levels = c( "Has custody event","Has arrest fel/misd",
"Has flash", "Has revocation", "Has D.A. conviction"))
ggplot( data = MonthlyDischargesRecidivismFiltered, aes(x = DischMonth, y = PercentRate ))  +
geom_line(stat = "identity", size = 1) + geom_point() +
facet_wrap(~  value, ncol = 1, scales = "free_y" ) +
guides(colour=FALSE) +
theme_bw() +
theme( #panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black")) +
geom_vline(xintercept = as.numeric(dateStartFieldContacts), linetype=4, size = 1,
color="blue") +
geom_vline(xintercept = as.numeric(dateProp47Began), linetype=4, size = 1,
color="firebrick") +
theme(axis.title.x = element_text(size = 16, angle = 00)) +
theme(axis.title.y = element_text(size = 16, angle = 90)) +
theme(axis.text.x = element_text(colour = "black",
size = 8,
angle = 90,
vjust = .5)) +
theme(panel.background = element_rect(fill = "#d5e4eb", colour = "black")) +
theme(plot.background = element_rect(fill = "#d5e4eb")) + # the economist background
theme(axis.text.y = element_text(colour = "black",
size = 8,
angle = 00)) +
scale_x_date("Month and Year",
#limits = c(as.Date("2011-10-1"), endDay),
labels = date_format("%b-%y"),
breaks = date_breaks("3 month")) +
scale_y_continuous("Percent of discharged", # limits=c(0, max(bookingsByMonthAgency$CountOfBookings)),
labels = comma)
```
\newpage
The table below shows the recidivism rate  by discharge cohort
```{r recidivism rate table, results ='asis', message = FALSE, warning = FALSE, include=TRUE}
# get a subset of this data for a table
recidivismTable <- MonthlyDischargesRecidivism %>%
filter(value == "Has custody event") %>%
select("Discharge month" = DischMonth,  "Cases with custody event" = counts,
"Monthly discharges"= monthlyDischarges , "Percent" = PercentRate)
# sort the data by date
recidivismTable <- recidivismTable[order(as.Date(recidivismTable$`Discharge month`, format="%y-%b-")),]
recidivismTable$`Discharge month` <- as.character(recidivismTable$`Discharge month`)
print(xtable(recidivismTable,
digits=0,
caption = "Recidivism rate by discharge month",
label="tblBreakpoints",
align = "r{3cm}cccc"
),
caption.placement = "bottom",
include.rownames=FALSE,
# table.placement="t",
scalebox='0.95',
floating=FALSE,
table.placement= "!hp",
format.args = list(big.mark = ",",
decimal.mark = "0"),
comment=FALSE)
.libPaths("X:/AB109-AB109-HUB/DataGuide/rpackages")
a<- test
a
